@page "/PostsPage"
@using global::Shared.Models
@using HTTPClients.ClientInterfaces
@using UIComponents
@inject IPostsService postService
@inject NavigationManager navMgr
@inject IJSRuntime JsRuntime
@attribute [Authorize]

<h3>Posts Page</h3>

@if (!string.IsNullOrEmpty(errormsg))
{
    <div>
        <span>@errormsg</span>
    </div>
}

else if (!posts.Any())
{
    <p>No Posts to display. Sorry(((</p>
}
else
{
    @foreach (var post in posts)
    {
        <DisplayPostBody Id="@post.postId" Title="@post.title" Username="@post.userName.userName"></DisplayPostBody>
        <br/>                                                                                         
    }
}


@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }
    [Parameter]
    public int Id { get; set; }

    private Post post { get; set; }
    private IEnumerable<Post> posts = new List<Post>();
    private string errormsg = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            posts = await postService.GetAllPostsAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errormsg = e.Message;
        }
    }

}